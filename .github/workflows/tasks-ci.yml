# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: 'Tasks CI'

on:
  push:
    branches: [ "main", "gitversion" ]
    paths:
      - '.github/workflows/tasks-*.yml'
      - 'src/Tasks/**'
      - 'src/TasksApi/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/tasks-*.yml'
      - 'src/Tasks/**'
      - 'src/TasksApi/**'
  workflow_dispatch:

permissions:
  statuses: write
  checks: write

# https://docs.github.com/en/actions/learn-github-actions/variables
env:
  PROJECT: src/Tasks/Tasks.csproj
  RELEASE: Release

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # [ubuntu-latest, windows-latest]
        dotnet: ['7.x']
        include:
          - os: ubuntu-latest
            dotnet: '7.x'
            publish: true

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet }}

    - name: Get Build Information
      id: build-info
      shell: pwsh
      run: |
        $versionPrefix = Get-Date -Format "yyyy.MM.dd"
        $runNumber = "${{ github.run_number }}"
        echo "version=$versionPrefix.$runNumber" >> $env:GITHUB_OUTPUT

    - name: Check Information
      shell: pwsh
      run: |
        echo ${{ steps.build-info.outputs.version }}

    - name: Restore dependencies
      run: dotnet restore $PROJECT

    - name: Build
      id: build
      shell: pwsh
      run: |
        dotnet build $PROJECT --no-restore --configuration ${{ env.RELEASE }} /p:Version=${{ steps.build-info.outputs.version }} -o $env:GITHUB_WORKSPACE/build
        [System.Reflection.Assembly]::LoadFrom("./src/Tasks/bin/${{ env.RELEASE }}/").GetName().Version
        echo "package_id=Boster.Training.Tasks.DotNet" >> $env:GITHUB_OUTPUT
        echo "output=$env:GITHUB_WORKSPACE/build" >> $env:GITHUB_OUTPUT

    - name: Test
      shell: pwsh
      run: dotnet test $PROJECT --no-build --verbosity normal --configuration  ${{ env.RELEASE }} /p:Version=${{ steps.build-info.outputs.version }} --logger "trx;LogFileName=test-results.trx"

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: .Net Unit Tests
        path: "**/test-results.trx"
        reporter: dotnet-trx
        fail-on-error: true
    
    - name: Create a Zip package üêô
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: ${{ steps.build.outputs.package_id }}
        version: ${{ steps.build-info.outputs.version }}
        output_folder: './packaging'
        base_path: ${{ steps.build.outputs.output }}
        files: |
          **/*.*

      
#  tests_e2e:
#    uses: ./.github/workflows/tests-e2e-playwright.yml